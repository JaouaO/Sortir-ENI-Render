{% extends 'base.html.twig' %}

{% block title %}Sortie{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
    <style>
        /* ========================== */
        /* Global */
        body {
            margin: 0;
        }

        .custom-navbar {
            background-color: #708980;
        }

        .navbar-brand {
            font-weight: bold;
            font-size: 1.5rem;
        }

        .sortir-logo {
            color: white;
        }

        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
        }
        .page-container {
            display: flex;
            flex-direction: column;
            min-height: 100vh; /* prend tout l’écran */
        }

        .content {
            flex: 1; /* pousse le footer vers le bas si contenu court */
            padding: 2rem;
        }

        .footer-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 5px;
            padding: 1rem 0;
        }
        /* footer avec bouton "Retour" */
        .footer-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 5px;
            padding: 1rem 0;
        }

        .btn-back {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            background-color: #0d6efd;
            color: white;
            font-weight: 600;
            border: none;
            cursor: pointer;
        }

        .btn-back:hover {
            background-color: #0b5ed7;
        }

        footer {
            width: 100%;
            text-align: center;
            background-color: #708980;
            color: white;
            padding: 10px 0;
            border-radius: 4px;
        }

        /* Responsive */
        @media (max-width: 600px) {
            .btn-back {
                width: 90%;
            }

            footer {
                font-size: 0.85rem;
            }
        }


        .event-info dt {
            font-weight: bold;
        }
        .event-info dd {
            margin-bottom: 10px;
        }

        /* Table participants */
        .participants-table {
            width: 100%;      /* prend toute la largeur de la card */
            max-width: none;  /* supprime la limite à 500px */
            max-height: none; /* supprime la limite à 250px */
            overflow: auto;   /* garde le scroll si nécessaire */
        }

        .participants-table thead th {
            position: sticky;
            top: 0;
            background: white;
            z-index: 2;
        }

        /* ========================== */
        /* Formulaire commun (profil + inscription) */
        input, select, textarea {
            width: 100%;
            padding: 0.6rem;
            border: 1px solid #ccc;
            border-radius: 8px;
            font-size: 1rem;
            transition: border 0.2s;
        }

        input:focus, select:focus, textarea:focus {
            border-color: #708980;
            outline: none;
        }

        label {
            display: block;
            margin-bottom: 0.3rem;
            font-weight: bold;
            color: #555;
        }

        /* ========================== */
        /* Profil & édition */
        .profile-container {
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 80vh;
            padding: 2rem;
            background-color: #f9f9f9;
        }

        .profile-card {
            max-width: 600px;
            width: 100%;
            background: white;
            padding: 2rem;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            text-align: center;
        }

        .profile-card h1 {
            margin-bottom: 1.5rem;
            color: #333;
            text-align: center;
        }

        .profile-card form div {
            margin-bottom: 1rem;
        }

        .profile-image {
            text-align: center;
            margin: 1rem 0;
        }

        .profile-image img {
            width: 150px;
            height: 150px;
            object-fit: cover;
            border-radius: 50%;
            border: 3px solid #708980;
        }

        .btn-edit {
            display: block;
            width: 100%;
            padding: 0.8rem;
            margin-top: 1rem;
            background-color: #708980;
            color: white;
            border: none;
            font-weight: bold;
            border-radius: 8px;
            cursor: pointer;
            transition: background 0.3s;
        }

        .btn-edit:hover {
            background-color: #556963;
        }

        /* ========================== */
        /* Inscription */
        .registration-container {
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 80vh;
            padding: 2rem;
            background-color: #f9f9f9;
        }

        .registration-card {
            max-width: 600px;
            width: 100%;
            background: white;
            padding: 2rem;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .registration-card h1 {
            text-align: center;
            margin-bottom: 1.5rem;
            color: #333;
        }

        .registration-card .alert {
            margin-bottom: 1rem;
            padding: 0.8rem 1rem;
            border-radius: 8px;
            font-weight: 500;
        }

        .registration-card .btn {
            display: block;
            width: 100%;
            padding: 0.8rem;
            margin-top: 1rem;
            background-color: #708980;
            color: white;
            border: none;
            font-weight: bold;
            border-radius: 8px;
            cursor: pointer;
            transition: background 0.3s;
        }

        .registration-card .btn:hover {
            background-color: #556963;
        }

        /* Case à cocher */
        .form-check {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .form-check input[type="checkbox"] {
            width: 20px;
            height: 20px;
            accent-color: #708980;
            cursor: pointer;
        }

        .form-check label {
            margin: 0;
            font-weight: normal;
            color: #555;
            cursor: pointer;
        }

        /* Boutons côte à côte */
        .registration-card .btn-group {
            display: flex;
            gap: 10px;
        }

        .registration-card .btn-group .btn {
            flex: 1;
        }

        /* Flex pour boutons dans les cartes profil */
        .card-body, .buttonAndText {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .buttonAndText h5 p {
            margin: 0;
        }

        /********************************/
        /* Page Annuler*/
        /********************************/
        /* Container principal */
        .cancel-container {
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 80vh;
            padding: 2rem;
            background-color: #f9f9f9;
        }
        /* Carte principale */
        .cancel-card {
            max-width: 700px;   /* un peu plus large */
            width: 100%;
            background: white;
            padding: 2rem 2.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            text-align: left;   /* tout aligné à gauche */
        }
        /* Titre */
        .cancel-card h1 {
            text-align: center;
            margin-bottom: 1.5rem;
            color: #333;
        }
        /* Bloc d'infos */
        .cancel-info dl {
            margin: 0;
        }
        .cancel-info dt {
            font-weight: bold;
            color: #444;
        }
        .cancel-info dd {
            margin-bottom: 1rem;
            margin-left: 0;
            color: #555;
        }
        /* Bloc motif */
        .cancel-reason {
            margin-top: 2rem;
        }
        .cancel-reason label {
            font-weight: bold;
            margin-bottom: 0.5rem;
            display: block;
        }
        /* Boutons */
        .cancel-buttons {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }
        .cancel-buttons .btn {
            flex: 1; /* même taille pour tous */
            font-weight: bold;
            padding: 0.8rem;
        }

    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
{% endblock %}

{% block body %}
    <div class="registration-container">
        <div class="registration-card">
            {% if mode == 'create' %}
                <h1 class="text-center mb-4">Créer une nouvelle sortie</h1>
            {% else %}
                <h1 class="text-center mb-4">Mettre à jour la sortie</h1>
            {% endif %}

            {{ form_start(event_form, { 'attr': { 'class': 'needs-validation' } }) }}
            {{ form_row(event_form.name) }}
            {{ form_row(event_form.startDateTime) }}
            {{ form_row(event_form.endDateTime) }}
            {{ form_row(event_form.registrationDeadline) }}
            {{ form_row(event_form.maxParticipants) }}
            {{ form_row(event_form.eventInfo) }}
            {{ form_row(event_form.site) }}
            {{ form_row(event_form.place) }}

            <div id="newPlaceStreetWrapper" style="display:none;" class="mb-3">
                <h5>Ajouter un nouveau lieu</h5>
                {{ form_row(event_form.newPlace) }}
                {{ form_row(event_form.newPlaceCity) }}
                {{ form_row(event_form.newPlaceStreet) }}
            </div>

            {{ form_row(event_form.newPlaceLat) }}
            {{ form_row(event_form.newPlaceLng) }}

            <div class="text-danger mb-3">
                {{ form_errors(event_form.newPlaceLat) }}
            </div>

            <div id="map" style="height:400px; margin-bottom:20px;"></div>

            <div class="text-center">
                <button type="submit" class="btn btn-primary">
                    {{ mode == 'create' ? 'Créer' : 'Mettre à jour' }}
                </button>
            </div>
            {{ form_end(event_form) }}
        </div>
    </div>

    <script>
        (function() {
            let map = null;
            let marker = null;
            let initialized = false;

            function initLeaflet() {
                if (initialized) return;
                const mapEl = document.getElementById('map');
                if (!mapEl || typeof L === 'undefined') return;

                const placeSelect = document.querySelector('#{{ event_form.place.vars.id }}');
                const streetWrapper = document.querySelector('#newPlaceStreetWrapper');

                function toggleStreetField() {
                    if (placeSelect && placeSelect.value) streetWrapper.style.display = 'none';
                    else streetWrapper.style.display = 'block';
                }

                if (placeSelect && streetWrapper) {
                    toggleStreetField();
                    placeSelect.addEventListener('change', toggleStreetField);
                }

                map = L.map('map').setView([47.2184, 1.6536], 6);
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; OpenStreetMap contributors'
                }).addTo(map);

                function setMarker(lat, lng) {
                    if (marker) map.removeLayer(marker);
                    marker = L.marker([lat, lng]).addTo(map);
                    map.setView([lat, lng], 15);
                }

                if (placeSelect && placeSelect.value) {
                    const selectedOption = placeSelect.selectedOptions[0];
                    const lat = selectedOption.dataset.lat;
                    const lng = selectedOption.dataset.lng;
                    if (lat && lng) setMarker(lat, lng);
                }

                placeSelect?.addEventListener('change', () => {
                    const selectedOption = placeSelect.selectedOptions[0];
                    const lat = selectedOption.dataset.lat;
                    const lng = selectedOption.dataset.lng;

                    if (lat && lng) setMarker(lat, lng);
                    else if (marker) {
                        map.removeLayer(marker);
                        marker = null;
                        map.setView([46.603354, 1.888334], 6);
                    }
                    toggleStreetField();
                });

                map.on('click', function(e) {
                    if (placeSelect && placeSelect.value) return;
                    if (marker) map.removeLayer(marker);
                    marker = L.marker(e.latlng).addTo(map);

                    const latInput = document.querySelector('#{{ event_form.newPlaceLat.vars.id }}');
                    const lngInput = document.querySelector('#{{ event_form.newPlaceLng.vars.id }}');
                    if (latInput && lngInput) {
                        latInput.value = e.latlng.lat;
                        lngInput.value = e.latlng.lng;
                    }
                });

                initialized = true;
            }

            initLeaflet();
            const intervalId = setInterval(() => { if (!initialized) initLeaflet(); else clearInterval(intervalId); }, 300);
            document.addEventListener('DOMContentLoaded', initLeaflet);
        })();
    </script>
{% endblock %}
